name: Training Pipeline - Daily Model Retraining

on:
  schedule:
    # Run daily at 2 AM UTC (after collecting 24 hours of new data)
    - cron: '0 2 * * *'
  
  workflow_dispatch:  # Allow manual trigger
    inputs:
      reason:
        description: 'Reason for manual training'
        required: false
        default: 'Manual trigger'

permissions:
  contents: read

jobs:
  train-models:
    runs-on: ubuntu-latest
    # Only run on main branch
    if: github.ref == 'refs/heads/main'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      
      - name: Install dependencies
        run: |
          pip install -r requirements.txt
      
      - name: Create GCP credentials file
        run: |
          echo '${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}' > aqi-service-account.json
      
      - name: Create .env file
        run: |
          echo "AQICN_TOKEN=${{ secrets.AQICN_TOKEN }}" >> .env
          echo "GCP_PROJECT_ID=${{ secrets.GCP_PROJECT_ID }}" >> .env
          echo "GCP_REGION=us-central1" >> .env
          echo "GCP_SERVICE_ACCOUNT_KEY_PATH=aqi-service-account.json" >> .env
      
      - name: Run training pipeline
        run: |
          python training_pipeline.py
      
      - name: Upload model artifacts
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: trained-models-${{ github.run_number }}
          path: |
            models/
            outputs/
            model_performance_history.csv
          retention-days: 30
      
      - name: Upload model performance summary
        if: success()
        run: |
          echo "## ðŸ“Š Training Pipeline Results" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          if [ -f "model_performance_history.csv" ]; then
            echo "### Latest Model Performance" >> $GITHUB_STEP_SUMMARY
            echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
            tail -n +2 model_performance_history.csv | tail -n 6 >> $GITHUB_STEP_SUMMARY
            echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
          fi
          
          echo "### Artifacts" >> $GITHUB_STEP_SUMMARY
          echo "- Model files: \`models/\` directory" >> $GITHUB_STEP_SUMMARY
          echo "- Evaluation results: \`outputs/\` directory" >> $GITHUB_STEP_SUMMARY
          echo "- Performance history: \`model_performance_history.csv\`" >> $GITHUB_STEP_SUMMARY
      
      - name: Cleanup credentials
        if: always()
        run: |
          rm -f aqi-service-account.json
          rm -f .env