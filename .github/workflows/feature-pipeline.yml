name: Hourly AQI Data Collection

# Explicit permissions to enable manual workflow runs
permissions:
  contents: read

on:
  schedule:
    # Run every hour at minute 0
    - cron: '0 * * * *'
  workflow_dispatch:  # Allow manual trigger
  push:
    branches: [ main ]
    paths:
      - 'feature_pipeline.py'
      - 'config.py'

jobs:
  collect-aqi-data:
    runs-on: ubuntu-latest
    # Only run on main branch
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Set up Python 3.12
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'
        
    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
          
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Setup environment
      run: |
        echo "AQICN_TOKEN=${{ secrets.AQICN_TOKEN }}" >> .env
        echo "CITY=islamabad" >> .env
        echo "FEAST_REPO_PATH=feature_repo" >> .env
          
    - name: Initialize Feast Feature Store
      run: |
        cd feature_repo
        feast apply
        echo "📊 Materializing features up to: $(date -u +"%Y-%m-%dT%H:%M:%S")"
        feast materialize-incremental $(date -u +"%Y-%m-%dT%H:%M:%S")
        echo "✅ Feast materialization complete"
        cd ..
    
    - name: Run AQI Feature Pipeline
      run: |
        echo "🚀 Starting automated AQI data collection..."
        echo "⏰ Timestamp: $(date)"
        python feature_pipeline.py
    
    - name: Upload logs on failure
      if: failure()
      uses: actions/upload-artifact@v4
      with:
        name: feature-pipeline-logs-${{ github.run_number }}
        path: ./
        retention-days: 7
    
    - name: Clean up environment
      if: always()
      run: |
        rm -f .env
